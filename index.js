var app = angular.module('StarterApp', ['ngMaterial']);app.config(function ($sceProvider) {    $sceProvider.enabled(false);});app.directive('sampleLinearChart', function ($window) {    return {        restrict: 'EA',        template: '<svg width="275" height="100"></svg>',        link: function (scope, elem, attrs) {            var lineChartData = [                {date: "2011-10-01 00:00", close: 70},                {date: "2011-10-02 00:00", close: 0},                {date: "2011-10-03 00:00", close: 60},                {date: "2011-10-04 00:00", close: 120}            ];            var parseDateTime = d3.timeParse("%Y-%m-%e %H:%M");            lineChartData.forEach(function (d) {                d.date = parseDateTime(d.date);            });            var svg = d3.select("svg"),                margin = {top: 25, right: 15, bottom: 30, left: 25},                width = +svg.attr("width") - margin.left - margin.right,                height = +svg.attr("height") - margin.top - margin.bottom,                g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");            var x = d3.scaleTime()                .rangeRound([0, width]);            var y = d3.scaleLinear()                .domain([0, 100])                .range([height, 0]);            var line = d3.line()                .x(function (d) {                    return x(d.date);                })                .y(function (d) {                    return y(d.close);                });            x.domain(d3.extent(lineChartData, function (d) {                return d.date;            }));            y.domain(d3.extent(lineChartData, function (d) {                return d.close;            }));            g.append("g")                .attr("transform", "translate(0," + height + ")")                .call(d3                    .axisBottom(x)                    .ticks(3)                    .tickSize(2)                    .tickFormat(d3.timeFormat("%b %e")))                .select(".domain");            svg.selectAll(".tick text")                .attr("transform", function (d) {                    return "translate(" + this.getBBox().height * -2 + "," + this.getBBox().height + 10 + ")rotate(-45)";                });            g.append("g")                .call(d3                    .axisLeft(y)                    .ticks(3)                    .tickSize(2))                .append("text")                .attr("fill", "#000")                .attr("transform", "rotate(-90)")                .attr("y", 6)                .attr("dy", "0.71em")                .attr("text-anchor", "end");            g.append("path")                .datum(lineChartData)                .attr("fill", "none")                .attr("stroke", "steelblue")                .attr("stroke-linejoin", "round")                .attr("stroke-linecap", "round")                .attr("stroke-width", 1.5)                .attr("d", line);        }    }});app.controller('AppCtrl', ['$scope', '$mdSidenav', function ($scope, $mdSidenav) {    $scope.toggleSidenav = function () {        $mdSidenav('left').toggle();    };}]);